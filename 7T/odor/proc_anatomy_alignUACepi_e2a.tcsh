#! /bin/csh
# Use UAC image generated by @SSwarper to align with epi and do recon
# use @SSwarper to process anatomy
# set sub=S01_yyt
# use input as sub
if ( $# > 0 ) then
set sub = $1
set datafolder=/Volumes/WD_E/gufei/7T_odor/${sub}
# set datafolder=/Volumes/WD_D/gufei/7T_odor/${sub}/
cd "${datafolder}"
# make dir to save masks
if (! -e mask_e2a) then
    mkdir mask_e2a
endif

# use freesurfer to reconstruct surfaces
# -sd pass working dir, the default is defined by env var 
# high resolution reconstruction
recon-all                                                                                   \
    -cm -i ${sub}_anat_warped/anatQQ.${sub}.nii                                             \
    -s ${sub}_surf_e2a -sd ./                                                               \
    -all -noskullstrip                                                                      \
    -parallel -threads 8                                                                    \
    -expert ../freesurfer_expert.txt

# create files for suma
# -fs_setup might me useful on macOS according to the help page
@SUMA_Make_Spec_FS -fs_setup -NIFTI -fspath ${sub}_surf_e2a -sid ${sub}

# Amygdala segmentation
# use multipal threads
setenv ITK_GLOBAL_DEFAULT_NUMBER_OF_THREADS 8
# the second input is subject_dir, error will occur when using ./
segmentHA_T1.sh ${sub}_surf_e2a ${datafolder}
# save amygdala mask
set masks = `ls ${sub}_surf_e2a/mri/?h.hippoAmygLabels-T1.v21.HBT.mgz`
# echo ${masks}
foreach mask (${masks})
    # echo ${mask}
    # change name
    set name = `echo ${mask} | cut -d '/' -f 3 | sed 's/.mgz/.nii/'`
    # echo ${name}
    mri_convert -ot nii ${mask} ${sub}_surf_e2a/SUMA/${name}
end

# set results directory
# use a different directory to avoid conflicts with existing files in pabiode
set analysis=pabioe2a
set subj = ${sub}.${analysis}
cd ${subj}.results

# align exp anatomy to suma surfvolume
# use wd to apply 12 parameters affine transform
# surf_anat is in different grids and has skull
# an error will occur if set prefix in -skull_strip_opt
@SUMA_AlignToExperiment                                                 \
    -exp_anat anat_final.${subj}+orig.HEAD                              \
    -surf_anat ../${sub}_surf_e2a/SUMA/${sub}_SurfVol.nii             \
    -prefix surf_e2a_align.${subj}                                    \
    -strip_skull surf_anat                                              \
    -wd                                                                 \
    -align_centers
# change segmentation masks to experiment space
# can also use -surf_anat_followers option in @SUMA_AlignToExperiment 
foreach mask (${masks})
    set input = `echo ${mask} | sed 's/mri/SUMA/' | sed 's/.mgz/.nii/'`
    set output = `echo ${input} | cut -d '/' -f 3 | sed 's/.nii/+orig/'`
    # resample to the EPI grid
    3dAllineate                                                             \
        -master vr_base_min_outlier+orig                                          \
        -1Dmatrix_apply surf_e2a_align.${subj}.A2E.1D                     \
        -input ../${input}                                                  \
        -prefix ${output}                                                   \
        -final NN
    set lr=`echo ${output} | cut -c1`
    3dcalc -a "${output}<7001..7015>" -expr 'step(a-7000)' -prefix ${lr}Amy.freesurfer+orig   
    3dcalc -a "${output}" -expr 'ispositive(a-7000)*(a-7000)' -prefix ${lr}Amy.seg.freesurfer+orig   
end

# all of the amygdala
3dcalc -a lAmy.freesurfer+orig -b rAmy.freesurfer+orig -expr 'a+b' -prefix Amy.freesurfer+orig
# different regions of amygdala
3dcalc -a lAmy.seg.freesurfer+orig -b rAmy.seg.freesurfer+orig -expr 'a+b' -prefix Amy.seg.freesurfer+orig
# copy Amy9_align masks
3dcopy Amy.freesurfer+orig ../mask_e2a/Amy9_align.freesurfer+orig
# copy Amy.seg masks to mask dir as sAmy
3dcopy Amy.seg.freesurfer+orig ../mask_e2a/sAmy.freesurfer+orig

# Print number of voxels for each ROI
3dROIstats -nzvoxels -mask Amy.seg.freesurfer+orig.HEAD Amy.seg.freesurfer+orig.HEAD >! ../mask_e2a/voxels.txt

# create cortical amygdala mask
3dcalc -a Amy.seg.freesurfer+orig -expr 'amongst(a,7,9)' -prefix ../mask_e2a/corticalAmy_align.freesurfer+orig
# create centralmedial amygdala mask
3dcalc -a Amy.seg.freesurfer+orig -expr 'amongst(a,5,6)' -prefix ../mask_e2a/CeMeAmy_align.freesurfer+orig
# create lateralbasal amygdala mask
3dcalc -a Amy.seg.freesurfer+orig -expr 'amongst(a,1,3,8,15)' -prefix ../mask_e2a/BaLaAmy_align.freesurfer+orig
# creat amygdala mask without AAA
3dcalc -a Amy.seg.freesurfer+orig -expr 'amongst(a,1,3,5,6,7,8,9,15)' -prefix ../mask_e2a/Amy8_align.freesurfer+orig

# create mask for each region
foreach region (1 3 5 6 7 8 9 10 15)
    3dcalc -a Amy.seg.freesurfer+orig -expr "equals(a,${region})" -prefix ../mask_e2a/Amy_align${region}seg.freesurfer+orig
end

else
 echo "Usage: $0 <Subjname>"

endif
