核心代码：
3dttest++ -overwrite -toz -setA ../{01..16}/con_0001.nii -prefix Z_test.nii -Clustsim #-Clustsim 后面还可以加数字，如-Clustsim 2，表示用两个job，要快一点。如果用配对t，可以用：
3dttest++ -overwrite -toz -setA ../{01..16}/beta_0001.nii -setB ../{01..16}/beta_0002.nii -prefix Z_test.nii -Clustsim
#这里是默认用数据本身生成的mask来计算的。
##会生成很多.1D文件，都可以用txt文档打开（或者vim,gedit等），其中NN1,NN2,NN3为cluster的认定标准，相邻体素共享面、边还是点，我一般用NN1（共享面），1sided和2sided分别是单尾和双尾，根据假设来定。

上面的比较简单，一步完成。如果要单独进行蒙特卡洛计算，用下面的步骤
BrainMask=../01/mask.nii
3dFWHMx -overwrite -mask $BrainMask -input Z_test.nii'[1]' -ACF -detrend > ACF.txt #这句话会计算ACF（AutoCorrelation Function），得到四个参数，但是只用其中的前三个。
ACF=`awk 'NR==4{print $1,$2,$3}' ACF.txt` #读取前三个参数值
3dClustSim -mask ${BrainMask} -acf $ACF -prefix Z_${name} #进行Monte Carlo模拟


生成阈限矫正的map：
ZThr=2.576 #单侧0.005
ClustThr=200 #从那个table里面选取最低的cluster大小
3dclust -mni -savemask -overwrite Corrected_map.nii -orient LPI -1noneg -dxyz=1 -1clip ${ZThr} ${NN} ${ClustThr} Z_test.nii'[1]'  clusters.1D
#生成的clusters.1D文件会列出每个经过校正的实验结果，包括peak坐标，cluster大小等等。同时-savemask会生成校正后的map（Corrected_map.nii）。